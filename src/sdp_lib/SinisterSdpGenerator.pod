=head1 NAME

SinisterSdpGenerator - The SDP generator routines

=head1 SYNOPSIS

 #include <SDP/SDP_Generator.h>
 
 int main(void)
 {
 	SDP_Generator *generator = SDP_NewGenerator();
 
 	SDP_GenProtocolVersionField(generator, 1);
 	SDP_GenOwnerField(
 		generator, "username", "session_id", "IN", "IP4", "127.0.0.1"
 	);
 	SDP_GenSessionNameField(generator, "Some session");
 	SDP_GenInformationField(generator, "This is short description");
 
 	...
 
 	SDP_SaveGeneratedOutput(generator, "description.sdp");
 }

=head1 DESCRIPTION

This document describes the SinisterSdp generator routines. These routines
enable you programmatically generate SDP session descriptions, as well as
spit out descriptions encapsulated by an C<SDP_Description> struct into a
string or file.

=head2 SDP_OutputDescriptionsToString(descriptions)

 char *SDP_OutputDescriptionsToString(SDP_Description *descriptions);

This function outputs every single C<SDP_Description> struct in the linked list
to a dynamically allocated string.

=over 4

=item Return Value

If no error occurs, it returns a pointer to the dynamically allocated string.
Otherwise, it returns a NULL pointer. Call C<SDP_GetLastError()> for extended
error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         output the descriptions to the string.

=item Parameters

=over 4

=item descriptions

A pointer to an C<SDP_Description> struct.

=back

=back

=head2 SDP_OutputDescriptionToString(description)

 char *SDP_OutputDescriptionToString(SDP_Description *description);

This function outputs a single C<SDP_Description> struct to a dynamically
allocated string and returns a pointer to it.

=over 4

=item Return Value

If no error occurs, it returns a pointer to the dynamically allocated string.
Otherwise, it returns a NULL pointer. Call C<SDP_GetLastError()> for extended
error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         output the description to the string.

=item Parameters

=over 4

=item description

A pointer to an C<SDP_Description> struct.

=back

=back

=head2 SDP_OutputDescriptionsToFile(descriptions, filename)

 int SDP_OutputDescriptionsToFile(
 	SDP_Description *   descriptions,
 	const char *        filename
 );

This function outputs every C<SDP_Description> struct in the link list to a
file. If the file specified does not exist, it will be created. If it does
exist, then anything in it will be overwritten.

=over 4

=item Return Value

This function returns true if no error occurs, false otherwise. Call
C<SDP_GetLastError()> for extended error information. The possible error codes
returned are:

 SDP_ERR_OUT_OF_MEMORY    - There isn't enough memory available to
                            output the descriptions to the
                            specified file.
 SDP_ERR_FILE_OPEN_FAILED - The file you specified could not be
                            opened.

=item Parameters

=over 4

=item descriptions

A pointer to an C<SDP_Description> struct.

=item filename

A pointer to a string containing the name of the file to write to.

=back

=back

=head2 SDP_OutputDescriptionToFile(description, filename)

 int SDP_OutputDescriptionToFile(
 	SDP_Description *   description,
 	const char *        filename
 );

This function outputs a single C<SDP_Description> struct to a file. If the file
specified does not exist, it will be created. If it does exist, then anything
in it will be overwritten.

=over 4

=item Return Value

This function returns true if no error occurs, false otherwise. Call
C<SDP_GetLastError()> for extended error information. The possible error codes
returned are:

 SDP_ERR_OUT_OF_MEMORY    - There isn't enough memory available to
                            output the description to the specified
                            file.
 SDP_ERR_FILE_OPEN_FAILED - The file you specified could not be
                            opened.

=item Parameters

=over 4

=item description

A pointer to an C<SDP_Description> struct.

=item filename

A pointer to a string containing the name of the file to write to.

=back

=back

=head2 SDP_NewGenerator()

 SDP_Generator *SDP_NewGenerator(void);

This function creates a new SDP generator.

=over 4

=item Return Value

If no error occurs, it returns a pointer to the newly-created C<SDP_Generator>
struct. Otherwise, it returns a NULL pointer instead. Call
C<SDP_GetLastError()> for extended error information. The possible error codes
returned are:

 SDP_ERR_OUT_OF_MEMORY - There wasn't enough memeory available to
                         create the generator.

=item Parameters

None.

=back

=head2 SDP_GenProtocolVersionField(generator, protocol_version)

 int SDP_GenProtocolVersionField(
 	SDP_Generator *   generator,
 	int               protocol_version
 );

This function generates a "v" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "v" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item protocol_version

The protocol version number.

=back

=back

=head2 SDP_GenOwnerField(generator, username, session_id, session_version, network_type, address_type, address)

 int SDP_GenOwnerField(
 	SDP_Generator *   generator,
 	const char *      username,
 	const char *      session_id,
 	const char *      session_version,
 	const char *      network_type,
 	const char *      address_type,
 	const char *      address
 );

This function generates an "o" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "o" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item username

A pointer to a string containing the username.

=item session_id

A pointer to a string containing the session ID.

=item session_version

A pointer to a string containing the session version number.

=item network_type

A pointer to a string containing the network type (e.g., "IN" for Internet).

=item address_type

A pointer to a string containing the address type (e.g., "IP4" for IPv4).

=item address

A pointer to a string containing the address.

=back

=back

=head2 SDP_GenFromOwner(generator, owner)

 int SDP_GenFromOwner(
 	SDP_Generator *   generator,
 	SDP_Owner *       owner
 );

This function generates an "o" field from an C<SDP_Owner> struct.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "o" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item owner

A pointer to the C<SDP_Owner> struct.

=back

=back

=head2 SDP_GenSessionNameField(generator, session_name)

 int SDP_GenSessionNameField(
 	SDP_Generator *   generator,
 	const char *      session_name
 );

This function generates an "s" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "s" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item session_name

A pointer to a string containing the name of the session.

=back

=back

=head2 SDP_GenInformationField(generator, information)

 int SDP_GenInformationField(
 	SDP_Generator *   generator,
 	const char *      information
 );

This fucntion generates an "i" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "i" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item information

A pointer to a string containing a short description of the session.

=back

=back

=head2 SDP_GenURIField(generator, uri)

 int SDP_GenURIField(
 	SDP_Generator *   generator,
 	const char *      uri
 );

This function generates a "u" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "u" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item uri

A pointer to a string containing the URI of the session.

=back

=back

=head2 SDP_GenEmailContactField(generator, address, name)

 int SDP_GenEmailContactField(
 	SDP_Generator *   generator,
 	const char *      address,
 	const char *      name
 );

This function generates an "e" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "e" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item address

A pointer to a string containing the email address.

=item name

A pointer to a string containing the name of the person who uses that email
address.

=back

=back

=head2 SDP_GenFromEmailContacts(generator, email_contacts)

 int SDP_GenFromEmailContacts(
 	SDP_Generator *      generator,
 	SDP_EmailContact *   email_contacts
 );

This function generates "e" fields from each C<SDP_EmailContact> struct in the
linked list.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "e" fields.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item email_contacts

A pointer to an C<SDP_EmailContact> struct.

=back

=back

=head2 SDP_GenFromEmailContact(generator, email_contact)

 int SDP_GenFromEmailContact(
 	SDP_Generator *      generator,
 	SDP_EmailContact *   email_contact
 );

This function generates a single "e" field from a single C<SDP_EmailContact>
struct.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "e" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item email_contact

A pointer to the C<SDP_EmailContact> struct.

=back

=back

=head2 SDP_GenPhoneContactField(generator, number, name)

 int SDP_GenPhoneContactField(
 	SDP_Generator *   generator,
 	const char *      number,
 	const char *      name
 );

This function generates a "p" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "p" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item number

A pointer to a string containing the phone number.

=item name

A pointer to a string containing the name of the person who can be reached at
that phone number.

=back

=back

=head2 SDP_GenFromPhoneContacts(generator, phone_contacts)

 int SDP_GenFromPhoneContacts(
 	SDP_Generator *      generator,
 	SDP_PhoneContact *   phone_contacts
 );

This function generates "p" fields from every C<SDP_PhoneContact> struct in the
linked list.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "p" fields.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item phone_contacts

A pointer to an C<SDP_PhoneContact> struct.

=back

=back

=head2 SDP_GenFromPhoneContact(generator, phone_contact)

 int SDP_GenFromPhoneContact(
 	SDP_Generator *      generator,
 	SDP_PhoneContact *   phone_contact
 );

This function generates a "p" field from a single C<SDP_PhoneContact> struct.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "p" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item phone_contact

A pointer to an C<SDP_PhoneContact> struct.

=back

=back

=head2 SDP_GenConnectionField(generator, network_type, address_type, address, ttl, total_addresses)

 int SDP_GenConnectionField(
 	SDP_Generator *   generator,
 	const char *      network_type,
 	const char *      address_type,
 	const char *      address,
 	int               ttl,
 	int               total_addresses
 );

This function generates a "c" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "c" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item network_type

A pointer to a string containing the network type (e.g., "IN" for Internet).

=item address_type

A pointer to a string containing the address type (e.g., "IP4" for Internet
Protocol version 4).

=item address

A pointer to a string containing the address.

=item ttl

Time To Live.

=item total_addresses

Counting up from "address", how many addresses are there available.

=back

=back

=head2 SDP_GenFromConnection(generator, connection)

 int SDP_GenFromConnection(
 	SDP_Generator *    generator,
 	SDP_Connection *   connection
 );

This function generates a "c" field from an C<SDP_Connection> struct.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "c" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item connection

A pointer to an C<SDP_Connection> struct.

=back

=back

=head2 SDP_GenBandwidthField(generator, modifier, value)

 int SDP_GenBandwidthField(
 	SDP_Generator *   generator,
 	const char *      modifier,
 	long              value
 );

This function generates a "b" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "c" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item modifier

A pointer to a string containing the bandwidth modifier (e.g., "CT" for
Conference Total).

=item value

A pointer to a string contianing the bandwidth value.

=back

=back

=head2 SDP_GenFromBandwidth(generator, bandwidth)

 int SDP_GenFromBandwidth(
 	SDP_Generator *   generator,
 	SDP_Bandwidth *   bandwidth
 );

This function generates a "b" field from an C<SDP_Bandwidth> struct.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "c" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item bandwidth

A pointer to a C<SDP_Bandwidth> struct.

=back

=back

=head2 SDP_GenSessionPlayTimeField(generator, start_time, end_time)

 int SDP_GenSessionPlayTimeField(
 	SDP_Generator *   generator,
 	time_t            start_time,
 	time_t            end_time
 );

This function generates a "t" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "t" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item start_time

A C<time_t> value of when the session starts.

=item end_time

A C<time_t> value of when the session ends.

=back

=back

=head2 SDP_GenFromSessionPlayTimes(generator, session_play_times)

 int SDP_GenFromSessionPlayTimes(
 	SDP_Generator *         generator,
 	SDP_SessionPlayTime *   session_play_times
 );

This function generates a "t" field and any requisite "r" feilds for each
C<SDP_SessionPlayTime> struct in the linked list.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "t" fields or "r" fields.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item session_play_times

A pointer to C<SDP_SessionPlayTime> struct.

=back

=back

=head2 SDP_GenFromSessionPlayTime(generator, session_play_time)

 int SDP_GenFromSessionPlayTime(
 	SDP_Generator *         generator,
 	SDP_SessionPlayTime *   session_play_time
 );

This function generates a single "t" field and any requisite "r" fields from
a C<SDP_SessionPlayTime> struct.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "t" field or "r" fields.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item session_play_time

A pointer to a C<SDP_SessionPlayTime> struct.

=back

=back

=head2 SDP_GenRepeatTimeField(generator, repeat_interval, active_duration, repeat_offsets)

 int SDP_GenRepeatTimeField(
 	SDP_Generator *   generator,
 	const char *      repeat_interval,
 	const char *      active_duration,
 	const char *      repeat_offsets
 );

This function generates an "r" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "r" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item repeat_interval

A pointer to a string containing the repeat interval as a number by itself
(meaning in seconds) or postfixed with the letter "m" (meaning in minutes), "h"
(meaning in hours), or "d" (meaning in days).

=item active_duration

A pointer to a string containing the active duration of the session as a number
by itself (meaning in seconds) or postfixed with the letter "m" (meaning in
minutes), "h" (meaning in hours), or "d" (meaning in days).

=item repeat_offsets

A string containing one or more repeat offsets seperated by spaces.

=back

=back

=head2 SDP_GenFromRepeatTimes(generator, repeat_times)

 int SDP_GenFromRepeatTimes(
 	SDP_Generator *    generator,
 	SDP_RepeatTime *   repeat_times
 );

This function generates "r" fields from each C<SDP_RepeatTime> struct in the
linked list.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "r" fields.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item repeat_times

A pointer to a C<SDP_RepeatTime> struct.

=back

=back

=head2 SDP_GenFromRepeatTime(generator, repeat_time)

 int SDP_GenFromRepeatTime(
 	SDP_Generator *    generator,
 	SDP_RepeatTime *   repeat_time
 );

This function generates an "r" field from an C<SDP_RepeatTime> struct.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "r" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item repeat_time

A pointer to the C<SDP_RepeatTime> strcut.

=back

=back

=head2 SDP_GenZoneAdjustmentsField(generator, total_adjustments, ...)

 int SDP_GenZoneAdjustmentsField(
 	SDP_Generator *   generator,
 	int               total_adjustments,
 	...
 );

This function generates a "z" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "z" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item total_adjustments

The number of time-zone adjustment pairs to expect.

=item ...

The remaining arguments come in pairs. The first is the time (as a C<time_t>
value) of when some type of zone adjustment is to occur. The second is the
adjustment itself in the form of a string comprised of a positive or negative
number followed by a the letter "m" (meaning minutes), "h" (meaning hours), or
"d" (meaning days):

 SDP_GenZoneAdjustmentsField(generator, 2,
 	some_time, "-1h",
 	some_other_time, "-2h"
 );

Each time value will be converted from OS time to Network Protocol Time.

=back

=back

=head2 SDP_GenFromZoneAdjustments(generator, zone_adjustments)

 int SDP_GenFromZoneAdjustments(
 	SDP_Generator *        generator,
 	SDP_ZoneAdjustment *   zone_adjustments
 );

Stub description documentation.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "z" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item zone_adjustments

A pointer to an C<SDP_ZoneAdjustments> struct.

=back

=back

=head2 SDP_GenEncryptionField(generator, method, key)

 int SDP_GenEncryptionField(
 	SDP_Generator *   generator,
 	const char *      method,
 	const char *      key
 );

This function generates a "k" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "e" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item method

A pointer to a string containing the encryption method.

=item key

A pointer to a string containing the encyption key.

=back

=back

=head2 SDP_GenFromEncryption(generator, encryption)

 int SDP_GenFromEncryption(
 	SDP_Generator *    generator,
 	SDP_Encryption *   encryption
 );

This function generates a "k" field from an C<SDP_Encryption> struct.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "k" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item encryption

A pointer to an C<SDP_Encryption> struct.

=back

=back

=head2 SDP_GenAttributeField(generator, name, value)

 int SDP_GenAttributeField(
 	SDP_Generator *   generator,
 	const char *      name,
 	const char *      value
 );

This function generates an "a" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "a" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item name

A pointer to a string containing the name of the attribute.

=item value

A pointer to a string containing the value of the attribute.

=back

=back

=head2 SDP_GenFromAttributes(generator, attributes)

 int SDP_GenFromAttributes(
 	SDP_Generator *   generator,
 	SDP_Attribute *   attributes
 );

This function generates "a" fields from every C<SDP_Attribute> struct in the
linked list.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "a" fields.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item attributes

A pointer to an C<SDP_Attribute> struct.

=back

=back

=head2 SDP_GenFromAttribute(generator, attribute)

 int SDP_GenFromAttribute(
 	SDP_Generator *   generator,
 	SDP_Attribute *   attribute
 );

This function generates an "a" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "a" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item attribute

A pointer to an C<SDP_Attribute> struct.

=back

=back

=head2 SDP_GenMediaDescriptionField(generator, media_type, port, total_ports, transport_protocol, formats)

 int SDP_GenMediaDescriptionField(
 	SDP_Generator *   generator,
 	const char *      media_type,
 	const char *      port,
 	const char *      transport_protocol,
 	const char *      formats
 );

This function generates an "m" field.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "m" field.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item media_type

A pointer to a string containing the media type.

=item port

A pointer to a string containing the port number with an optional number of
other usable ports for UDP multicasts.

=item transport_protocol

A pointer to a string containing the transport protocol (e.g., "RTP/AVP").

=item formats

A pointer to a string containing media formats separated by spaces.

=back

=back

=head2 SDP_GenFromMediaDescriptions(generator, media_descriptions)

 int SDP_GenFromMediaDescriptions(
 	SDP_Generator *          generator,
 	SDP_MediaDescription *   media_descriptions
 );

This function generates "m" fields and any other requisite fields from each
C<SDP_MediaDescription> in the linked list.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_OUT_OF_MEMORY - There isn't enough memory available to
                         generate the "m" fields.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item media_descriptions

A pointer to an C<SDP_MediaDescription> struct.

=back

=back

=head2 SDP_GenFromMediaDescription(generator, media_description)

 int SDP_GenFromMediaDescription(
 	SDP_Generator *          generator,
 	SDP_MediaDescription *   media_description
 );

This function generates an "m" field and any related fields from an
C<SDP_MediaDescription> struct.

=over 4

=item Return Value

Stub return value documentation.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item media_description

A pointer to an C<SDP_MediaDescription> struct.

=back

=back

=head2 SDP_GetGeneratedOutput(generator)

 char *SDP_GetGeneratedOutput(SDP_Generator *generator);

This function returns a pointer to the generator's buffer. If you want to
modify the this or use it after calling C<SDP_DestroyGenerator()>, use
C<strdup()> or some comparable function to copy it.

=over 4

=item Return Value

A pointer to the generator's output buffer.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=back

=back

=head2 SDP_SaveGeneratedOutput(generator, filename)

 int SDP_SaveGeneratedOutput(
 	SDP_Generator *   generator,
 	const char *      filename
 );

This function outputs the generator buffer to a file. If the file specified
doesn't already exist, then it will be created. If it does exist, then anything
in it will be overwritten.

=over 4

=item Return Value

It returns ture if no error occurs, false otherwise. Call C<SDP_GetLastError()>
for extended error information. The possible error codes returned are:

 SDP_ERR_FILE_OPEN_FAILED - The file you specified could not
                            be opened.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct.

=item filename

A pointer to a string containing the name of the file to write to.

=back

=back

=head2 SDP_DestroyGenerator(generator)

 void SDP_DestroyGenerator(SDP_Generator *generator);

This function destroys an SDP generator, returning its memory to the system.

=over 4

=item Return Value

None.

=item Parameters

=over 4

=item generator

A pointer to the C<SDP_Generator> struct to destroy.

=back

=back

=head1 BUGS

Bugs in this package can be reported and monitored using sourceforge.net:
http://sourceforge.net/tracker/?atid=644250&group_id=106387&func=browse

You can also email me directly:
<william_g_davis at users dot sourceforge dot net>.

=head1 COPYRIGHT

Copyright 2004 by William G. Davis.

This library is free software released under the terms of the GNU Lesser
General Public License (LGPL), the full terms of which can be found in the
"COPYING" file that comes with the distribution.

This library is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.

=cut

